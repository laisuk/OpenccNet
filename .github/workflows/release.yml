name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release ${{ matrix.rid }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            rid: win-x64
            ext: zip
          - os: ubuntu-latest
            rid: linux-x64
            ext: tar.gz
          - os: macos-latest
            rid: osx-x64
            ext: tar.gz

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Publish (Framework-dependent, Single File, R2R)
        shell: bash
        run: |
          dotnet publish OpenccNet/OpenccNet.csproj \
            --configuration Release \
            --runtime ${{ matrix.rid }} \
            --output publish/ \
            --no-self-contained \
            -p:PublishSingleFile=true \
            -p:PublishReadyToRun=true

      - name: Rename and Zip (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $tag = "${{ github.ref_name }}"
          $folder = "OpenccNet-$tag-${{ matrix.rid }}"
          Rename-Item -Path publish -NewName $folder
          Compress-Archive -Path "$folder\*" -DestinationPath "$folder.${{ matrix.ext }}"

      - name: Rename and Tar (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          tag="${{ github.ref_name }}"
          folder="OpenccNet-$tag-${{ matrix.rid }}"
          mv publish "$folder"
          tar -czf "$folder.${{ matrix.ext }}" "$folder"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: OpenccNet-${{ github.ref_name }}-${{ matrix.rid }}.${{ matrix.ext }}
          prerelease: ${{ contains(github.ref_name, '-') }}
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      